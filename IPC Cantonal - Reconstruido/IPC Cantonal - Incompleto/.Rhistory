#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Data para Animacion Mapa
# MapaCanton = fromJSON(file = "https://raw.githubusercontent.com/Rusersgroup/mapa_ecuador/master/ec-all.geo.json")
producto = Productos[pd+1]
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#FF9933", maxColor = "#006699")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
hc_chart(borderColor = "#404040",
borderRadius = 10,
borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.2 #Velocidad !!!!!!!!!!!
)
)
View(BDDMap)
library(highcharter)
library(dplyr)
library(rjson)
library(stringr)
library(readxl)
library(readr)
#Carga de Datos --------------------------------------
load("Data/IPC_Canton_reconstruido.RData")
ArchCodCanton = read.csv("Data/Mapa/ArchCodCanton.csv")
# Estandarización de Datos  ==========================
pd = 2  #producto
Productos = names(IPC_canton[[1]])
#i = 1
BDDMap = data.frame()
for(i in 1:length(IPC_canton)){
Fechas_aux = IPC_canton[[i]][,1] #Corregir
IPC_val_aux = IPC_canton[[i]][,pd+1]
nombre_aux = names(IPC_canton)[i]
BDDMap_aux = data.frame(ARCH_CANTON = nombre_aux,
Fecha=Fechas_aux,
Valor = IPC_val_aux)
BDDMap = rbind(BDDMap, BDDMap_aux)
}
BDDMap = ArchCodCanton %>%
inner_join(BDDMap,by="ARCH_CANTON") %>%
select(COD_CANTON,CANTON,Fecha,Valor)
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#-------------------------  MAPA ANIMADO  --------------------------
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Data para Animacion Mapa
# MapaCanton = fromJSON(file = "https://raw.githubusercontent.com/Rusersgroup/mapa_ecuador/master/ec-all.geo.json")
producto = Productos[pd+1]
# BDDMap = read_excel("Data/Mapa/Mapa_Data_Ej.xlsx")  #!!!!!!
MapaCanton = fromJSON(file = "Data/Mapa/Mapa_Cantonal.geojson")
DFMap = BDDMap %>%
group_by(COD_CANTON) %>%
do(item = list(
COD_CANTON = first(.$COD_CANTON),
sequence = .$Valor,
value = first(.$Valor))) %>%
.$item
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#FF9933", maxColor = "#006699")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
hc_chart(borderColor = "#404040",
borderRadius = 10,
borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.2 #Velocidad !!!!!!!!!!!
)
)
View(BDDMap)
View(BDDMap)
View(ArchCodCanton)
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}'))
View(BDDMap)
unique(BDDMap$CANTON)
View(BDDMap)
DFMap = BDDMap %>%
group_by(COD_CANTON) %>%
do(item = list(
COD_CANTON = first(.$COD_CANTON),
sequence = .$Valor,
value = first(.$Valor))) %>%
.$item
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#FF9933", maxColor = "#006699")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
hc_chart(borderColor = "#404040",
borderRadius = 10,
borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.2 #Velocidad !!!!!!!!!!!
)
)
View(MapaCanton)
View(IPC_canton)
names(IPC_canton)
View(ArchCodCanton)
Poblacion$COD_CANTON
source(file = "Code/CargaData.R",local = TRUE)
source(file = "Code/MatrizPesos.R",local = TRUE)
names(IPC_prov)
#Carga de Datos --------------------------------------
load("Data/IPC_Canton_reconstruido.RData")
#Data para empatar canton con su Archivo.csv Respectivo  ----------------
ArchCodCanton = data.frame(COD_CANTON = Poblacion$COD_CANTON,
CANTON = Poblacion$CANTON,
ARCH_CANTON = paste(Poblacion$COD_CANTON,Poblacion$CANTON))
ArchCodCanton
write.csv(ArchCodCanton, file = "Data/Mapa/ArchCodCanton.csv",row.names = F)
#Data para empatar canton con su Archivo.csv Respectivo  ----------------
ArchCodCanton = data.frame(COD_CANTONc = paste0(Poblacion$COD_CANTON,"c"),
CANTON = Poblacion$CANTON,
ARCH_CANTON = paste(Poblacion$COD_CANTON,Poblacion$CANTON))
ArchCodCanton
write.csv(ArchCodCanton, file = "Data/Mapa/ArchCodCanton.csv",row.names = F)
#Data para empatar canton con su Archivo.csv Respectivo  ----------------
ArchCodCanton = data.frame(COD_CANTONc = paste0(Poblacion$COD_CANTON),
CANTON = Poblacion$CANTON,
ARCH_CANTON = paste(Poblacion$COD_CANTON,Poblacion$CANTON))
write.csv(ArchCodCanton, file = "Data/Mapa/ArchCodCanton.csv",row.names = F)
ArchCodCanton
ArchCodCanton = read.csv("Data/Mapa/ArchCodCanton.csv")
ArchCodCanton
#Data para empatar canton con su Archivo.csv Respectivo  ----------------
ArchCodCanton = data.frame(COD_CANTON = paste0(Poblacion$COD_CANTON),
CANTON = Poblacion$CANTON,
ARCH_CANTON = paste(Poblacion$COD_CANTON,Poblacion$CANTON))
write.csv(ArchCodCanton, file = "Data/Mapa/ArchCodCanton.csv",row.names = F)
ArchCodCanton = read.csv("Data/Mapa/ArchCodCanton.csv")
ArchCodCanton$
# Estandarización de Datos  ==========================
pd = 2  #producto
ArchCodCanton
substr(ArchCodCanton$COD_CANTON,start = 1,stop = 4)
ArchCodCanton$COD_CANTON
substr(ArchCodCanton$ARCH_CANTON,start = 1,stop = 4)
ArchCodCanton$COD_CANTON = substr(ArchCodCanton$ARCH_CANTON,start = 1,stop = 4)
# Estandarización de Datos  ==========================
pd = 2  #producto
Productos = names(IPC_canton[[1]])
#i = 1
BDDMap = data.frame()
for(i in 1:length(IPC_canton)){
Fechas_aux = IPC_canton[[i]][,1] #Corregir
IPC_val_aux = IPC_canton[[i]][,pd+1]
nombre_aux = names(IPC_canton)[i]
BDDMap_aux = data.frame(ARCH_CANTON = nombre_aux,
Fecha=Fechas_aux,
Valor = IPC_val_aux)
BDDMap = rbind(BDDMap, BDDMap_aux)
}
BDDMap = ArchCodCanton %>%
inner_join(BDDMap,by="ARCH_CANTON") %>%
select(COD_CANTON,CANTON,Fecha,Valor)
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#-------------------------  MAPA ANIMADO  --------------------------
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Data para Animacion Mapa
# MapaCanton = fromJSON(file = "https://raw.githubusercontent.com/Rusersgroup/mapa_ecuador/master/ec-all.geo.json")
producto = Productos[pd+1]
# BDDMap = read_excel("Data/Mapa/Mapa_Data_Ej.xlsx")  #!!!!!!
MapaCanton = fromJSON(file = "Data/Mapa/Mapa_Cantonal.geojson")
DFMap = BDDMap %>%
group_by(COD_CANTON) %>%
do(item = list(
COD_CANTON = first(.$COD_CANTON),
sequence = .$Valor,
value = first(.$Valor))) %>%
.$item
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#FF9933", maxColor = "#006699")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
hc_chart(borderColor = "#404040",
borderRadius = 10,
borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.2 #Velocidad !!!!!!!!!!!
)
)
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#FF9933", maxColor = "#006699")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
# hc_chart(borderColor = "#404040",
#          borderRadius = 10,
#          borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.2 #Velocidad !!!!!!!!!!!
)
)
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#FF9933", maxColor = "#006699")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
# hc_chart(borderColor = "#404040",
#          borderRadius = 10,
#          borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.2 #Velocidad !!!!!!!!!!!
)
)
#----------------------------------------------------------
highchart(type = "map") %>%
hc_title(text = "<b>Índice de Precios al Consumidor</b>",
margin = 20, align = "center") %>%
hc_subtitle(text = producto,
align = "center") %>%
hc_tooltip(followPointer =  TRUE) %>%
hc_add_series(data = DFMap,
mapData = MapaCanton,
name = "Población",
value = "Valor",
joinBy = c("DPA_CANTON", "COD_CANTON"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.DPA_DESCAN}')) %>%
# hc_motion(enabled = TRUE,series = 1,labels = 1:n) %>%
# hc_colorAxis(dataClasses = color_classes(seq(25124, 3645483, length.out = 12))) %>%
hc_colorAxis(minColor = "#922B21", maxColor = "#F9EBEA")  %>%
# hc_colorAxis(dataClasses = color_classes(breaks = seq(25124, 3645483, length.out = 40),
#                                          colors = c("#ff0000", "#ffcc00", "#33cc33"))) %>%
hc_mapNavigation(enabled = TRUE) %>%
#!!!!!!!!!!!!!!!!       Temas      !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# hc_add_theme(hc_theme_ffx()) %>%
# hc_add_theme(hc_theme_darkunica()) %>%
# hc_add_theme(hc_theme_economist()) %>%
# hc_chart(borderColor = "#404040",
#          borderRadius = 10,
#          borderWidth = 2) %>%
hc_legend(layout = "vertical", reversed = TRUE,
floating = TRUE, align = "right") %>%
hc_motion(
enabled = TRUE,
axisLabel = "Fecha",
labels = sort(unique(BDDMap$Fecha)),
series = 0,
updateIterval = 10,
magnet = list(
round = "floor",
step = 0.11 #Velocidad !!!!!!!!!!!
)
)
library(haven)
BASE_RAS_2014 <- read_sav("C:/Users/Asus/Desktop/bdd_recursos_salud_2014/BASE_RAS_2014.sav")
View(BASE_RAS_2014)
str(BASE_RAS_2014)
str(BASE_RAS_2014)
names(BASE_RAS_2014)
attributes(BASE_RAS_2014)
labels(BASE_RAS_2014)
str(BASE_RAS_2014)
attr(BASE_RAS_2014)
attr(BASE_RAS_2014$Anio)
attr(BASE_RAS_2014$Anio,"label")
attr(BASE_RAS_2014
,"label")
attr(BASE_RAS_2014[,1],"label")
attr(BASE_RAS_2014[,2],"label")
attr(BASE_RAS_2014$k25,"label")
install.packages("sjmisc")
library(sjmisc)
get_label(BASE_RAS_2014)
library(sjmisc)
library(sjmisc)
get_label(BASE_RAS_2014)
library(sjmisc)
parse?
¿parse
help(parse)
help(eval)
parse(as.expression("k11"))
eval(as.expression("k11"))
as.expression("k11")
expression("k11")
attr(BASE_RAS_2014$k1,"label")
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#-------------   Reconstruccion IPC Cantonal  2019    ---------------
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Carga Datos
library(readxl)
library(readr)
library(ggplot2)
library(dplyr)
source(file = "Code/CargaData.R",local = TRUE)
source(file = "Code/MatrizPesos.R",local = TRUE)
IPC_canton = list()
for(Ciudd in 1:dim(Poblacion)[1]){
#Data Frames Inicializados   -----------------
nfila = dim(IPC_ciudades[[1]])[1]
ncolum = dim(IPC_ciudades[[1]])[2]
Bd = matrix(NA,nrow = nfila, ncol = ncolum)
Bd = data.frame(Bd)
names(Bd) = names(IPC_ciudades[[1]])
Bd$Fecha = IPC_ciudades[[1]]$Fecha
#Rellenamos con IPC Reconstruido  ------------
for(j in 2:ncolum){
for(i in 1:nfila){
Bd[i,j] = 0
for(ciuP in 1:dim(CiudadCanton)[1] ){
# Sumar IPC de ciudades Principales (Que existen)
if(!is.na(IPC_ciudades[[ciuP]][i,j])){
Bd[i,j] = Bd[i,j] + A[Ciudd,ciuP]*IPC_ciudades[[ciuP]][i,j]
}
#Si no no suma nada (Ej. Santo Domingo)
}
if(Bd[i,j] == 0){
Bd[i,j] = NA
}
}
}
IPC_canton[[Ciudd]] = Bd
print(paste("************ ",paste0(Ciudd, ".- " ,Poblacion$CANTON[Ciudd])," *************"))
}
names(IPC_canton) = paste(Poblacion$COD_CANTON,Poblacion$CANTON)
# ---------------------------------------------
save(IPC_canton,file = "Data/IPC_Canton_reconstruido.RData")
# Guardamos en CSV's   ------------------------
for(i in 1:length(IPC_canton)){
write.csv(IPC_canton[[i]],
file = paste0("Data/Cantones Reconstruidos/",names(IPC_canton)[i],".csv"))
}
#Data para empatar canton con su Archivo.csv Respectivo  ----------------
ArchCodCanton = data.frame(COD_CANTON = paste0(Poblacion$COD_CANTON),
CANTON = Poblacion$CANTON,
ARCH_CANTON = paste(Poblacion$COD_CANTON,Poblacion$CANTON))
write.csv(ArchCodCanton, file = "Data/Mapa/ArchCodCanton.csv",row.names = F)
